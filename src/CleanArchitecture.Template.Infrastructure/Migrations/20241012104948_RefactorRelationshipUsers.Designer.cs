// <auto-generated />
using System;
using CleanArchitecture.Template.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitecture.Template.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241012104948_RefactorRelationshipUsers")]
    partial class RefactorRelationshipUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.WeatherForecasts.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9780a369-0724-481d-a5da-9a17b61f0edc"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7355),
                            Summary = "Balmy",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7355)
                        },
                        new
                        {
                            Id = new Guid("feef765b-38db-4fba-ae68-3356051c05c7"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7367),
                            Summary = "Bracing",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7367)
                        },
                        new
                        {
                            Id = new Guid("8bf6a54a-2290-4015-8720-988e02b8d1d0"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7373),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7373)
                        },
                        new
                        {
                            Id = new Guid("a0c57aba-d79e-426c-8afb-5f6aba6f652f"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7377),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7377)
                        },
                        new
                        {
                            Id = new Guid("05f5783c-1d8b-4103-b65a-fe67eb617dff"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7381),
                            Summary = "Bracing",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7381)
                        },
                        new
                        {
                            Id = new Guid("58f1bf21-5f8c-4c99-820b-abbe9e21f0ac"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7430),
                            Summary = "Scorching",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7430)
                        },
                        new
                        {
                            Id = new Guid("ed38ea80-3bac-456b-8f61-a6b1601d1070"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7434),
                            Summary = "Scorching",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7434)
                        },
                        new
                        {
                            Id = new Guid("e43c57e7-1d86-43c0-9ab8-26832ff131ac"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7442),
                            Summary = "Balmy",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7442)
                        },
                        new
                        {
                            Id = new Guid("ef9b0a49-1b94-4c7b-abb6-ecec0d018acd"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7446),
                            Summary = "Sweltering",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7446)
                        },
                        new
                        {
                            Id = new Guid("9d914f5d-14bc-458c-9f28-c2f187ea4c57"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7452),
                            Summary = "Balmy",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7452)
                        },
                        new
                        {
                            Id = new Guid("251de2be-f2e4-43e8-a7e5-9d0429b4527c"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7457),
                            Summary = "Cool",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7457)
                        },
                        new
                        {
                            Id = new Guid("82185f0e-d921-410f-94a2-f19532d68412"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7461),
                            Summary = "Scorching",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7461)
                        },
                        new
                        {
                            Id = new Guid("d5763e94-ce21-4247-8a4e-49dcb43a59ea"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7465),
                            Summary = "Hot",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7465)
                        },
                        new
                        {
                            Id = new Guid("b9cf2657-0b94-4887-8608-f7639164bef3"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7469),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7469)
                        },
                        new
                        {
                            Id = new Guid("700c70c5-59de-4372-b017-e5c95b60c7d9"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7473),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7473)
                        },
                        new
                        {
                            Id = new Guid("840e925a-61c2-4b40-928a-c69952fbbee9"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7479),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7479)
                        },
                        new
                        {
                            Id = new Guid("ae95981b-5aea-47ed-a012-39477db6c152"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7483),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7483)
                        },
                        new
                        {
                            Id = new Guid("d6a7af4e-3d54-43ae-bbbf-42262b2c0695"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7490),
                            Summary = "Mild",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7490)
                        },
                        new
                        {
                            Id = new Guid("ca3250af-ec5c-4d70-96a4-9abfc8b7d6b0"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7494),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7494)
                        },
                        new
                        {
                            Id = new Guid("812f582f-5f9d-449b-b4e6-1288c04c64a0"),
                            CreatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7498),
                            Summary = "Freezing",
                            UpdatedDate = new DateTime(2024, 10, 12, 12, 49, 47, 754, DateTimeKind.Local).AddTicks(7498)
                        });
                });

            modelBuilder.Entity("Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad01db8c-202b-47be-890f-d8cd06dec15a"),
                            CreatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274),
                            Description = "Can read data",
                            Name = "Read",
                            UpdatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274)
                        },
                        new
                        {
                            Id = new Guid("bc4c62a5-db85-4c9c-b16c-cfbb5263e642"),
                            CreatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274),
                            Description = "Can modify data",
                            Name = "Write",
                            UpdatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274)
                        },
                        new
                        {
                            Id = new Guid("9bc09ac6-863b-45df-9488-be216834e4cf"),
                            CreatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274),
                            Description = "Can manage users",
                            Name = "ManageUsers",
                            UpdatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274)
                        },
                        new
                        {
                            Id = new Guid("c4a42caf-3623-4bb5-865f-e6e453c733bf"),
                            CreatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274),
                            Description = "Can manage roles and permissions",
                            Name = "ManageRoles",
                            UpdatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274)
                        },
                        new
                        {
                            Id = new Guid("abc520a3-e143-4e27-ad84-994ef3fd227f"),
                            CreatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274),
                            Description = "Can view the dashboard",
                            Name = "ViewDashboard",
                            UpdatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 745, DateTimeKind.Utc).AddTicks(274)
                        });
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c455147-d0e7-4922-89ad-d0c78348975a"),
                            CreatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 746, DateTimeKind.Utc).AddTicks(8260),
                            RoleName = "Admin",
                            UpdatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 746, DateTimeKind.Utc).AddTicks(8260)
                        },
                        new
                        {
                            Id = new Guid("43790e2a-3e88-4f9b-99dd-879737ab7bda"),
                            CreatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 746, DateTimeKind.Utc).AddTicks(8260),
                            RoleName = "User",
                            UpdatedDate = new DateTime(2024, 10, 12, 10, 49, 47, 746, DateTimeKind.Utc).AddTicks(8260)
                        });
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.User", b =>
                {
                    b.OwnsOne("CleanArchitecture.Template.Domain.Users.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName1");

                            b1.Property<string>("LastName2")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName2");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("FullName")
                        .IsRequired();
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.WeatherForecasts.WeatherForecast", b =>
                {
                    b.OwnsOne("CleanArchitecture.Template.Domain.WeatherForecasts.ValueObjects.Temperature", "Temperature", b1 =>
                        {
                            b1.Property<Guid>("WeatherForecastId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TemperatureType");

                            b1.Property<double>("Value")
                                .HasColumnType("float")
                                .HasColumnName("TemperatureValue");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecasts");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");

                            b1.HasData(
                                new
                                {
                                    WeatherForecastId = new Guid("9780a369-0724-481d-a5da-9a17b61f0edc"),
                                    Type = "Celsius",
                                    Value = 23.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("feef765b-38db-4fba-ae68-3356051c05c7"),
                                    Type = "Fahrenheit",
                                    Value = -5.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8bf6a54a-2290-4015-8720-988e02b8d1d0"),
                                    Type = "Celsius",
                                    Value = -2.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("a0c57aba-d79e-426c-8afb-5f6aba6f652f"),
                                    Type = "Fahrenheit",
                                    Value = 29.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("05f5783c-1d8b-4103-b65a-fe67eb617dff"),
                                    Type = "Fahrenheit",
                                    Value = 24.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("58f1bf21-5f8c-4c99-820b-abbe9e21f0ac"),
                                    Type = "Fahrenheit",
                                    Value = -5.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ed38ea80-3bac-456b-8f61-a6b1601d1070"),
                                    Type = "Fahrenheit",
                                    Value = 26.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("e43c57e7-1d86-43c0-9ab8-26832ff131ac"),
                                    Type = "Celsius",
                                    Value = -2.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ef9b0a49-1b94-4c7b-abb6-ecec0d018acd"),
                                    Type = "Celsius",
                                    Value = 14.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("9d914f5d-14bc-458c-9f28-c2f187ea4c57"),
                                    Type = "Celsius",
                                    Value = 8.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("251de2be-f2e4-43e8-a7e5-9d0429b4527c"),
                                    Type = "Celsius",
                                    Value = 10.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("82185f0e-d921-410f-94a2-f19532d68412"),
                                    Type = "Fahrenheit",
                                    Value = 9.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d5763e94-ce21-4247-8a4e-49dcb43a59ea"),
                                    Type = "Fahrenheit",
                                    Value = 5.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("b9cf2657-0b94-4887-8608-f7639164bef3"),
                                    Type = "Fahrenheit",
                                    Value = 27.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("700c70c5-59de-4372-b017-e5c95b60c7d9"),
                                    Type = "Fahrenheit",
                                    Value = 22.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("840e925a-61c2-4b40-928a-c69952fbbee9"),
                                    Type = "Celsius",
                                    Value = 2.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ae95981b-5aea-47ed-a012-39477db6c152"),
                                    Type = "Fahrenheit",
                                    Value = 22.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d6a7af4e-3d54-43ae-bbbf-42262b2c0695"),
                                    Type = "Celsius",
                                    Value = 26.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ca3250af-ec5c-4d70-96a4-9abfc8b7d6b0"),
                                    Type = "Celsius",
                                    Value = 11.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("812f582f-5f9d-449b-b4e6-1288c04c64a0"),
                                    Type = "Celsius",
                                    Value = 27.0
                                });
                        });

                    b.OwnsOne("CleanArchitecture.Template.Domain.WeatherForecasts.ValueObjects.WeatherDate", "Date", b1 =>
                        {
                            b1.Property<Guid>("WeatherForecastId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date")
                                .HasColumnName("Date");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecasts");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");

                            b1.HasData(
                                new
                                {
                                    WeatherForecastId = new Guid("9780a369-0724-481d-a5da-9a17b61f0edc"),
                                    Value = new DateOnly(2027, 3, 15)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("feef765b-38db-4fba-ae68-3356051c05c7"),
                                    Value = new DateOnly(2025, 3, 24)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8bf6a54a-2290-4015-8720-988e02b8d1d0"),
                                    Value = new DateOnly(2022, 4, 13)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("a0c57aba-d79e-426c-8afb-5f6aba6f652f"),
                                    Value = new DateOnly(2025, 7, 12)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("05f5783c-1d8b-4103-b65a-fe67eb617dff"),
                                    Value = new DateOnly(2024, 2, 28)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("58f1bf21-5f8c-4c99-820b-abbe9e21f0ac"),
                                    Value = new DateOnly(2023, 1, 19)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ed38ea80-3bac-456b-8f61-a6b1601d1070"),
                                    Value = new DateOnly(2023, 4, 15)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("e43c57e7-1d86-43c0-9ab8-26832ff131ac"),
                                    Value = new DateOnly(2023, 9, 23)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ef9b0a49-1b94-4c7b-abb6-ecec0d018acd"),
                                    Value = new DateOnly(2027, 6, 24)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("9d914f5d-14bc-458c-9f28-c2f187ea4c57"),
                                    Value = new DateOnly(2025, 9, 29)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("251de2be-f2e4-43e8-a7e5-9d0429b4527c"),
                                    Value = new DateOnly(2023, 1, 9)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("82185f0e-d921-410f-94a2-f19532d68412"),
                                    Value = new DateOnly(2026, 3, 11)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d5763e94-ce21-4247-8a4e-49dcb43a59ea"),
                                    Value = new DateOnly(2023, 1, 21)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("b9cf2657-0b94-4887-8608-f7639164bef3"),
                                    Value = new DateOnly(2023, 3, 9)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("700c70c5-59de-4372-b017-e5c95b60c7d9"),
                                    Value = new DateOnly(2026, 10, 13)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("840e925a-61c2-4b40-928a-c69952fbbee9"),
                                    Value = new DateOnly(2026, 5, 31)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ae95981b-5aea-47ed-a012-39477db6c152"),
                                    Value = new DateOnly(2023, 1, 17)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d6a7af4e-3d54-43ae-bbbf-42262b2c0695"),
                                    Value = new DateOnly(2026, 1, 1)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ca3250af-ec5c-4d70-96a4-9abfc8b7d6b0"),
                                    Value = new DateOnly(2026, 11, 24)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("812f582f-5f9d-449b-b4e6-1288c04c64a0"),
                                    Value = new DateOnly(2024, 11, 2)
                                });
                        });

                    b.Navigation("Date")
                        .IsRequired();

                    b.Navigation("Temperature")
                        .IsRequired();
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.HasOne("Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.HasOne("Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchitecture.Template.Domain.Users.Aggregates.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
