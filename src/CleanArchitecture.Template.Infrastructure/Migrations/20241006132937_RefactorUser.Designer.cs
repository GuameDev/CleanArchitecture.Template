// <auto-generated />
using System;
using CleanArchitecture.Template.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitecture.Template.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241006132937_RefactorUser")]
    partial class RefactorUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.WeatherForecasts.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1475a3ee-87be-49ad-9792-444ed5f08347"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8128),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8128)
                        },
                        new
                        {
                            Id = new Guid("d6d38f71-7ae4-4743-824b-578f8a2bd19e"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8153),
                            Summary = "Scorching",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8153)
                        },
                        new
                        {
                            Id = new Guid("dac3df8b-7e6b-40d0-b4e1-953aeebbe6ea"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8159),
                            Summary = "Scorching",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8159)
                        },
                        new
                        {
                            Id = new Guid("f3fab33b-bb0c-4f8f-82ff-4d43172107ac"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8162),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8162)
                        },
                        new
                        {
                            Id = new Guid("b5f788df-fa5a-4596-87e9-8c7a1c6cdc91"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8166),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8166)
                        },
                        new
                        {
                            Id = new Guid("8a9833f5-0fe4-4ad0-b21c-8413c3342192"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8173),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8173)
                        },
                        new
                        {
                            Id = new Guid("1dcc2fcb-0101-42df-97cc-9ac238afde57"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8177),
                            Summary = "Bracing",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8177)
                        },
                        new
                        {
                            Id = new Guid("2c854f4f-7b64-49f1-8c84-92d13c315bc3"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8210),
                            Summary = "Freezing",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8210)
                        },
                        new
                        {
                            Id = new Guid("d1719491-1580-457e-83b1-7f60b79a488a"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8215),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8215)
                        },
                        new
                        {
                            Id = new Guid("25f0dad7-c4a4-4770-b40a-e75a77e56f14"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8224),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8224)
                        },
                        new
                        {
                            Id = new Guid("a3b1da9e-b8d2-4a57-9a63-8761f50f7e5b"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8228),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8228)
                        },
                        new
                        {
                            Id = new Guid("8d21c1cc-53ab-477c-ba8f-cd86579c1645"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8232),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8232)
                        },
                        new
                        {
                            Id = new Guid("561ba2f8-e10c-4a70-b9f5-7ac423e8bb44"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8236),
                            Summary = "Freezing",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8236)
                        },
                        new
                        {
                            Id = new Guid("3aa97db3-52f2-439a-8898-3114cc6e86a5"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8240),
                            Summary = "Bracing",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8240)
                        },
                        new
                        {
                            Id = new Guid("9c04421e-0690-4d99-a258-cc2ad2bd9ab8"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8244),
                            Summary = "Cool",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8244)
                        },
                        new
                        {
                            Id = new Guid("0b9e2c65-a9c9-4301-a4a4-2c36d2d072f9"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8248),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8248)
                        },
                        new
                        {
                            Id = new Guid("34289d0b-9120-45f7-9a6e-e5a70aec49d5"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8252),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8252)
                        },
                        new
                        {
                            Id = new Guid("1136a82d-9eb8-4ab0-86f9-df6dd7ef173d"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8260),
                            Summary = "Hot",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8260)
                        },
                        new
                        {
                            Id = new Guid("8636a7ce-b04c-4a48-bf8a-e4900e350e92"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8264),
                            Summary = "Freezing",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8264)
                        },
                        new
                        {
                            Id = new Guid("ca2b4171-3648-49ac-90cd-a7ba8f0ca8d1"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8268),
                            Summary = "Bracing",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 29, 36, 715, DateTimeKind.Local).AddTicks(8268)
                        });
                });

            modelBuilder.Entity("Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b66770a-c349-4360-b24b-caf4f5497697"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771),
                            Description = "Can read data",
                            Name = "Read",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771)
                        },
                        new
                        {
                            Id = new Guid("1dc89f7b-7ccb-4b74-9789-f36223104036"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771),
                            Description = "Can modify data",
                            Name = "Write",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771)
                        },
                        new
                        {
                            Id = new Guid("488df78f-8f93-4bff-91e9-978cb5b5fc00"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771),
                            Description = "Can manage users",
                            Name = "ManageUsers",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771)
                        },
                        new
                        {
                            Id = new Guid("1f321217-7a9c-4548-9d30-13ced1429b42"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771),
                            Description = "Can manage roles and permissions",
                            Name = "ManageRoles",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771)
                        },
                        new
                        {
                            Id = new Guid("267df3bf-757a-4646-a146-7a5d23ccdfaa"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771),
                            Description = "Can view the dashboard",
                            Name = "ViewDashboard",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 707, DateTimeKind.Utc).AddTicks(2771)
                        });
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b897db57-b761-48b6-96c8-c8723c7d5576"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 709, DateTimeKind.Utc).AddTicks(184),
                            RoleName = "Admin",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 709, DateTimeKind.Utc).AddTicks(184)
                        },
                        new
                        {
                            Id = new Guid("0e9f7c76-d842-4cac-9603-339a8abbd441"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 709, DateTimeKind.Utc).AddTicks(184),
                            RoleName = "User",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 29, 36, 709, DateTimeKind.Utc).AddTicks(184)
                        });
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.User", b =>
                {
                    b.OwnsOne("CleanArchitecture.Template.Domain.Users.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName1");

                            b1.Property<string>("LastName2")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName2");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("FullName")
                        .IsRequired();
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.WeatherForecasts.WeatherForecast", b =>
                {
                    b.OwnsOne("CleanArchitecture.Template.Domain.WeatherForecasts.ValueObjects.Temperature", "Temperature", b1 =>
                        {
                            b1.Property<Guid>("WeatherForecastId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TemperatureType");

                            b1.Property<double>("Value")
                                .HasColumnType("float")
                                .HasColumnName("TemperatureValue");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecasts");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");

                            b1.HasData(
                                new
                                {
                                    WeatherForecastId = new Guid("1475a3ee-87be-49ad-9792-444ed5f08347"),
                                    Type = "Fahrenheit",
                                    Value = 31.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d6d38f71-7ae4-4743-824b-578f8a2bd19e"),
                                    Type = "Fahrenheit",
                                    Value = 12.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("dac3df8b-7e6b-40d0-b4e1-953aeebbe6ea"),
                                    Type = "Celsius",
                                    Value = 18.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("f3fab33b-bb0c-4f8f-82ff-4d43172107ac"),
                                    Type = "Fahrenheit",
                                    Value = 27.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("b5f788df-fa5a-4596-87e9-8c7a1c6cdc91"),
                                    Type = "Fahrenheit",
                                    Value = 0.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8a9833f5-0fe4-4ad0-b21c-8413c3342192"),
                                    Type = "Fahrenheit",
                                    Value = 26.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("1dcc2fcb-0101-42df-97cc-9ac238afde57"),
                                    Type = "Fahrenheit",
                                    Value = 22.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("2c854f4f-7b64-49f1-8c84-92d13c315bc3"),
                                    Type = "Fahrenheit",
                                    Value = 31.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d1719491-1580-457e-83b1-7f60b79a488a"),
                                    Type = "Celsius",
                                    Value = -4.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("25f0dad7-c4a4-4770-b40a-e75a77e56f14"),
                                    Type = "Fahrenheit",
                                    Value = 3.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("a3b1da9e-b8d2-4a57-9a63-8761f50f7e5b"),
                                    Type = "Fahrenheit",
                                    Value = 8.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8d21c1cc-53ab-477c-ba8f-cd86579c1645"),
                                    Type = "Celsius",
                                    Value = -5.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("561ba2f8-e10c-4a70-b9f5-7ac423e8bb44"),
                                    Type = "Fahrenheit",
                                    Value = 26.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("3aa97db3-52f2-439a-8898-3114cc6e86a5"),
                                    Type = "Celsius",
                                    Value = 29.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("9c04421e-0690-4d99-a258-cc2ad2bd9ab8"),
                                    Type = "Fahrenheit",
                                    Value = 33.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("0b9e2c65-a9c9-4301-a4a4-2c36d2d072f9"),
                                    Type = "Celsius",
                                    Value = 22.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("34289d0b-9120-45f7-9a6e-e5a70aec49d5"),
                                    Type = "Fahrenheit",
                                    Value = -4.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("1136a82d-9eb8-4ab0-86f9-df6dd7ef173d"),
                                    Type = "Fahrenheit",
                                    Value = 31.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8636a7ce-b04c-4a48-bf8a-e4900e350e92"),
                                    Type = "Celsius",
                                    Value = -3.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ca2b4171-3648-49ac-90cd-a7ba8f0ca8d1"),
                                    Type = "Fahrenheit",
                                    Value = 0.0
                                });
                        });

                    b.OwnsOne("CleanArchitecture.Template.Domain.WeatherForecasts.ValueObjects.WeatherDate", "Date", b1 =>
                        {
                            b1.Property<Guid>("WeatherForecastId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date")
                                .HasColumnName("Date");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecasts");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");

                            b1.HasData(
                                new
                                {
                                    WeatherForecastId = new Guid("1475a3ee-87be-49ad-9792-444ed5f08347"),
                                    Value = new DateOnly(2025, 1, 2)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d6d38f71-7ae4-4743-824b-578f8a2bd19e"),
                                    Value = new DateOnly(2026, 9, 6)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("dac3df8b-7e6b-40d0-b4e1-953aeebbe6ea"),
                                    Value = new DateOnly(2027, 6, 29)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("f3fab33b-bb0c-4f8f-82ff-4d43172107ac"),
                                    Value = new DateOnly(2027, 2, 27)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("b5f788df-fa5a-4596-87e9-8c7a1c6cdc91"),
                                    Value = new DateOnly(2023, 5, 13)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8a9833f5-0fe4-4ad0-b21c-8413c3342192"),
                                    Value = new DateOnly(2025, 5, 19)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("1dcc2fcb-0101-42df-97cc-9ac238afde57"),
                                    Value = new DateOnly(2027, 5, 4)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("2c854f4f-7b64-49f1-8c84-92d13c315bc3"),
                                    Value = new DateOnly(2027, 3, 29)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d1719491-1580-457e-83b1-7f60b79a488a"),
                                    Value = new DateOnly(2023, 6, 3)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("25f0dad7-c4a4-4770-b40a-e75a77e56f14"),
                                    Value = new DateOnly(2023, 3, 16)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("a3b1da9e-b8d2-4a57-9a63-8761f50f7e5b"),
                                    Value = new DateOnly(2022, 2, 5)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8d21c1cc-53ab-477c-ba8f-cd86579c1645"),
                                    Value = new DateOnly(2023, 12, 5)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("561ba2f8-e10c-4a70-b9f5-7ac423e8bb44"),
                                    Value = new DateOnly(2023, 6, 14)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("3aa97db3-52f2-439a-8898-3114cc6e86a5"),
                                    Value = new DateOnly(2023, 11, 10)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("9c04421e-0690-4d99-a258-cc2ad2bd9ab8"),
                                    Value = new DateOnly(2024, 9, 4)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("0b9e2c65-a9c9-4301-a4a4-2c36d2d072f9"),
                                    Value = new DateOnly(2026, 10, 2)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("34289d0b-9120-45f7-9a6e-e5a70aec49d5"),
                                    Value = new DateOnly(2024, 6, 2)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("1136a82d-9eb8-4ab0-86f9-df6dd7ef173d"),
                                    Value = new DateOnly(2023, 2, 23)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("8636a7ce-b04c-4a48-bf8a-e4900e350e92"),
                                    Value = new DateOnly(2026, 3, 28)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ca2b4171-3648-49ac-90cd-a7ba8f0ca8d1"),
                                    Value = new DateOnly(2022, 8, 22)
                                });
                        });

                    b.Navigation("Date")
                        .IsRequired();

                    b.Navigation("Temperature")
                        .IsRequired();
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.HasOne("Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.HasOne("Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchitecture.Template.Domain.Users.Aggregates.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
