// <auto-generated />
using System;
using CleanArchitecture.Template.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitecture.Template.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241006132153_InitialUserMigration")]
    partial class InitialUserMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb31e5ce-3570-49ea-810d-fc97841461bf"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266),
                            Description = "Can read data",
                            Name = "Read",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266)
                        },
                        new
                        {
                            Id = new Guid("2e2b887b-0906-4b87-a2fd-5b54393c6a71"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266),
                            Description = "Can modify data",
                            Name = "Write",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266)
                        },
                        new
                        {
                            Id = new Guid("b626ba6b-eab3-4fac-92e4-9a95a752d704"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266),
                            Description = "Can manage users",
                            Name = "ManageUsers",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266)
                        },
                        new
                        {
                            Id = new Guid("32cc229b-6b25-44d8-b1c1-cbb1361a2717"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266),
                            Description = "Can manage roles and permissions",
                            Name = "ManageRoles",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266)
                        },
                        new
                        {
                            Id = new Guid("cdb142f6-8166-4033-993b-7115c9e20397"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266),
                            Description = "Can view the dashboard",
                            Name = "ViewDashboard",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 527, DateTimeKind.Utc).AddTicks(3266)
                        });
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41234080-f21a-4a44-8516-2dae646aa123"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 530, DateTimeKind.Utc).AddTicks(4365),
                            RoleName = "Admin",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 530, DateTimeKind.Utc).AddTicks(4365)
                        },
                        new
                        {
                            Id = new Guid("8f308976-de9f-4db5-a560-a7a8ad0bfa62"),
                            CreatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 530, DateTimeKind.Utc).AddTicks(4365),
                            RoleName = "User",
                            UpdatedDate = new DateTime(2024, 10, 6, 13, 21, 53, 530, DateTimeKind.Utc).AddTicks(4365)
                        });
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.WeatherForecasts.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59c2e145-ec24-45a8-b3ec-49d804b4c2b7"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6047),
                            Summary = "Cool",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6047)
                        },
                        new
                        {
                            Id = new Guid("5a26f595-d010-4fa8-8363-9dbc4d0cc128"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6065),
                            Summary = "Sweltering",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6065)
                        },
                        new
                        {
                            Id = new Guid("4b3aa17c-2f32-4bb8-a5c7-ba23048456bd"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6073),
                            Summary = "Cool",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6073)
                        },
                        new
                        {
                            Id = new Guid("d7ee4b75-1ea7-4c77-a17e-c59371120a96"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6080),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6080)
                        },
                        new
                        {
                            Id = new Guid("bc991811-6dee-4b4d-a575-ac0669f11bc7"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6086),
                            Summary = "Cool",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6086)
                        },
                        new
                        {
                            Id = new Guid("135132dd-f7b1-40c9-bbc7-4e61e30d273a"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6100),
                            Summary = "Hot",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6100)
                        },
                        new
                        {
                            Id = new Guid("c88b0388-cd42-4117-b310-bb0e4157b543"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6109),
                            Summary = "Cool",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6109)
                        },
                        new
                        {
                            Id = new Guid("3d3e3562-3e0f-458c-bc51-71fc7cfc9dad"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6116),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6116)
                        },
                        new
                        {
                            Id = new Guid("acce7e5f-be19-41ad-b2ae-542647fcb201"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6124),
                            Summary = "Cool",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6124)
                        },
                        new
                        {
                            Id = new Guid("ebf7d842-8645-4f97-8fd8-35b69c1f573c"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6188),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6188)
                        },
                        new
                        {
                            Id = new Guid("27982c20-7f3e-4a94-b7d6-dd6d6bd9696d"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6196),
                            Summary = "Warm",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6196)
                        },
                        new
                        {
                            Id = new Guid("e7d9a120-4f43-4b3d-a973-e47146d77d14"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6203),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6203)
                        },
                        new
                        {
                            Id = new Guid("5af0d73e-2f0a-4388-8bab-9a7f253abf88"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6211),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6211)
                        },
                        new
                        {
                            Id = new Guid("5d5b86eb-3ec1-47a1-b0aa-0a3c1b567a3e"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6218),
                            Summary = "Freezing",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6218)
                        },
                        new
                        {
                            Id = new Guid("a8505e56-cb52-4f77-9f7c-bfbe1aca9d1e"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6227),
                            Summary = "Scorching",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6227)
                        },
                        new
                        {
                            Id = new Guid("19731922-706c-4435-b5b0-705e3d06646c"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6233),
                            Summary = "Sweltering",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6233)
                        },
                        new
                        {
                            Id = new Guid("b6f5f446-af71-4efc-a17d-f81bf3a62415"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6240),
                            Summary = "Unknown",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6240)
                        },
                        new
                        {
                            Id = new Guid("fac83a78-8db7-4677-b8d4-176bea9881a3"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6251),
                            Summary = "Chilly",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6251)
                        },
                        new
                        {
                            Id = new Guid("875efc10-25a9-4437-9a19-0f9a08122c0d"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6258),
                            Summary = "Scorching",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6258)
                        },
                        new
                        {
                            Id = new Guid("6ca8b6a6-afee-4028-9570-491f28568d97"),
                            CreatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6265),
                            Summary = "Sweltering",
                            UpdatedDate = new DateTime(2024, 10, 6, 15, 21, 53, 539, DateTimeKind.Local).AddTicks(6265)
                        });
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.Role", b =>
                {
                    b.HasOne("CleanArchitecture.Template.Domain.Users.Aggregates.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.User", b =>
                {
                    b.OwnsOne("CleanArchitecture.Template.Domain.Users.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName1");

                            b1.Property<string>("LastName2")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName2");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("FullName")
                        .IsRequired();
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.WeatherForecasts.WeatherForecast", b =>
                {
                    b.OwnsOne("CleanArchitecture.Template.Domain.WeatherForecasts.ValueObjects.Temperature", "Temperature", b1 =>
                        {
                            b1.Property<Guid>("WeatherForecastId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TemperatureType");

                            b1.Property<double>("Value")
                                .HasColumnType("float")
                                .HasColumnName("TemperatureValue");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecasts");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");

                            b1.HasData(
                                new
                                {
                                    WeatherForecastId = new Guid("59c2e145-ec24-45a8-b3ec-49d804b4c2b7"),
                                    Type = "Celsius",
                                    Value = 7.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("5a26f595-d010-4fa8-8363-9dbc4d0cc128"),
                                    Type = "Fahrenheit",
                                    Value = 0.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("4b3aa17c-2f32-4bb8-a5c7-ba23048456bd"),
                                    Type = "Fahrenheit",
                                    Value = 6.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d7ee4b75-1ea7-4c77-a17e-c59371120a96"),
                                    Type = "Fahrenheit",
                                    Value = 1.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("bc991811-6dee-4b4d-a575-ac0669f11bc7"),
                                    Type = "Fahrenheit",
                                    Value = 34.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("135132dd-f7b1-40c9-bbc7-4e61e30d273a"),
                                    Type = "Fahrenheit",
                                    Value = 1.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("c88b0388-cd42-4117-b310-bb0e4157b543"),
                                    Type = "Fahrenheit",
                                    Value = 8.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("3d3e3562-3e0f-458c-bc51-71fc7cfc9dad"),
                                    Type = "Celsius",
                                    Value = 31.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("acce7e5f-be19-41ad-b2ae-542647fcb201"),
                                    Type = "Celsius",
                                    Value = 5.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ebf7d842-8645-4f97-8fd8-35b69c1f573c"),
                                    Type = "Celsius",
                                    Value = 12.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("27982c20-7f3e-4a94-b7d6-dd6d6bd9696d"),
                                    Type = "Celsius",
                                    Value = 0.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("e7d9a120-4f43-4b3d-a973-e47146d77d14"),
                                    Type = "Fahrenheit",
                                    Value = 33.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("5af0d73e-2f0a-4388-8bab-9a7f253abf88"),
                                    Type = "Celsius",
                                    Value = 33.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("5d5b86eb-3ec1-47a1-b0aa-0a3c1b567a3e"),
                                    Type = "Fahrenheit",
                                    Value = 20.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("a8505e56-cb52-4f77-9f7c-bfbe1aca9d1e"),
                                    Type = "Celsius",
                                    Value = 1.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("19731922-706c-4435-b5b0-705e3d06646c"),
                                    Type = "Fahrenheit",
                                    Value = 27.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("b6f5f446-af71-4efc-a17d-f81bf3a62415"),
                                    Type = "Celsius",
                                    Value = 14.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("fac83a78-8db7-4677-b8d4-176bea9881a3"),
                                    Type = "Celsius",
                                    Value = 13.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("875efc10-25a9-4437-9a19-0f9a08122c0d"),
                                    Type = "Celsius",
                                    Value = 34.0
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("6ca8b6a6-afee-4028-9570-491f28568d97"),
                                    Type = "Celsius",
                                    Value = 26.0
                                });
                        });

                    b.OwnsOne("CleanArchitecture.Template.Domain.WeatherForecasts.ValueObjects.WeatherDate", "Date", b1 =>
                        {
                            b1.Property<Guid>("WeatherForecastId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date")
                                .HasColumnName("Date");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecasts");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");

                            b1.HasData(
                                new
                                {
                                    WeatherForecastId = new Guid("59c2e145-ec24-45a8-b3ec-49d804b4c2b7"),
                                    Value = new DateOnly(2024, 7, 28)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("5a26f595-d010-4fa8-8363-9dbc4d0cc128"),
                                    Value = new DateOnly(2027, 6, 8)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("4b3aa17c-2f32-4bb8-a5c7-ba23048456bd"),
                                    Value = new DateOnly(2026, 5, 26)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("d7ee4b75-1ea7-4c77-a17e-c59371120a96"),
                                    Value = new DateOnly(2024, 1, 21)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("bc991811-6dee-4b4d-a575-ac0669f11bc7"),
                                    Value = new DateOnly(2026, 12, 26)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("135132dd-f7b1-40c9-bbc7-4e61e30d273a"),
                                    Value = new DateOnly(2027, 1, 29)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("c88b0388-cd42-4117-b310-bb0e4157b543"),
                                    Value = new DateOnly(2024, 2, 5)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("3d3e3562-3e0f-458c-bc51-71fc7cfc9dad"),
                                    Value = new DateOnly(2024, 4, 15)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("acce7e5f-be19-41ad-b2ae-542647fcb201"),
                                    Value = new DateOnly(2024, 5, 8)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("ebf7d842-8645-4f97-8fd8-35b69c1f573c"),
                                    Value = new DateOnly(2026, 12, 13)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("27982c20-7f3e-4a94-b7d6-dd6d6bd9696d"),
                                    Value = new DateOnly(2023, 4, 23)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("e7d9a120-4f43-4b3d-a973-e47146d77d14"),
                                    Value = new DateOnly(2027, 6, 2)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("5af0d73e-2f0a-4388-8bab-9a7f253abf88"),
                                    Value = new DateOnly(2024, 1, 4)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("5d5b86eb-3ec1-47a1-b0aa-0a3c1b567a3e"),
                                    Value = new DateOnly(2023, 8, 22)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("a8505e56-cb52-4f77-9f7c-bfbe1aca9d1e"),
                                    Value = new DateOnly(2024, 4, 21)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("19731922-706c-4435-b5b0-705e3d06646c"),
                                    Value = new DateOnly(2024, 6, 18)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("b6f5f446-af71-4efc-a17d-f81bf3a62415"),
                                    Value = new DateOnly(2023, 6, 19)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("fac83a78-8db7-4677-b8d4-176bea9881a3"),
                                    Value = new DateOnly(2026, 5, 3)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("875efc10-25a9-4437-9a19-0f9a08122c0d"),
                                    Value = new DateOnly(2026, 4, 13)
                                },
                                new
                                {
                                    WeatherForecastId = new Guid("6ca8b6a6-afee-4028-9570-491f28568d97"),
                                    Value = new DateOnly(2026, 5, 25)
                                });
                        });

                    b.Navigation("Date")
                        .IsRequired();

                    b.Navigation("Temperature")
                        .IsRequired();
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.HasOne("CleanArchitecture.Template.Domain.Users.Aggregates.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchitecture.Template.Domain.Users.Aggregates.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CleanArchitecture.Template.Domain.Users.Aggregates.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
